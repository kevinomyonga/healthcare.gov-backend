name: CI

# Enable Buildkit and let compose use it to speed up image building
env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

on:
  pull_request:
    branches: ['master', 'main']
    paths-ignore: ['docs/**']

  push:
    branches: ['master', 'main']
    paths-ignore: ['docs/**']

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: 'server/.python-version'
      - name: Run pre-commit
        uses: pre-commit/action@v3.0.1

  # With no caching at all the entire ci process takes 3m to complete!
  pytest:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      # Add support for more platforms with QEMU (optional)
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Set up Docker Buildx (supports caching)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

      # Pull the cached images from GitHub Container Registry
      - name: Pull Cached Image (django) from GHCR
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          docker pull ghcr.io/$REPO_NAME/${{ env.DJANGO_IMAGE }}:latest || echo "No cache found"

      - name: Pull Cached Image (docs) from GHCR
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          docker pull ghcr.io/$REPO_NAME/${{ env.DOCS_IMAGE }}:latest || echo "No cache found"

      # Build the Stack using Docker Compose with BuildKit cache
      - name: Build the Stack with Cache
        run: |
          DOCKER_BUILDKIT=1 docker compose \
            -f server/docker-compose.local.yml \
            build --pull django

      - name: Build the docs with Cache
        run: |
          DOCKER_BUILDKIT=1 docker compose \
            -f server/docker-compose.docs.yml \
            build --pull docs

      # Push the built images back to GitHub Container Registry to update the cache
      - name: List Docker Images
        run: docker images

      - name: Push Django Image to GitHub Container Registry
        run: |
          echo "Pushing Django image..."
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          docker tag ${{ env.DJANGO_IMAGE }}:latest ghcr.io/$REPO_NAME/${{ env.DJANGO_IMAGE }}:latest
          docker push ghcr.io/$REPO_NAME/${{ env.DJANGO_IMAGE }}:latest || echo "Failed to push Django image."

      - name: Push Docs Image to GitHub Container Registry
        run: |
          echo "Pushing Docs image..."
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          docker tag ${{ env.DOCS_IMAGE }}:latest ghcr.io/$REPO_NAME/${{ env.DOCS_IMAGE }}:latest
          docker push ghcr.io/$REPO_NAME/${{ env.DOCS_IMAGE }}:latest || echo "Failed to push Docs image."

      - name: Check DB Migrations
        run: docker compose -f server/docker-compose.local.yml run --rm django python manage.py makemigrations --check

      - name: Run DB Migrations
        run: docker compose -f server/docker-compose.local.yml run --rm django python manage.py migrate

      - name: Run Django Tests
        run: docker compose -f server/docker-compose.local.yml run django pytest

      - name: Tear down the Stack
        run: docker compose -f server/docker-compose.local.yml down
